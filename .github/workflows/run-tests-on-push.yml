# Name of the workflow
name: Run Tests on Push

# Event that triggers the workflow
on: [push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps TCP port 5432 on service container to the host
          - 5432:5432

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup node environment
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Cache node modules
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies
      - name: Install Dependencies
        run: yarn install --immutable --immutable-cache --check-cache

      # Run tests
      - name: Run Tests
        run: npm run test
        env:
          TEST_DB_HOST: localhost
          TEST_DB_USER: admin
          TEST_DB_PASSWORD: admin
          TEST_DB_DATABASE: postgres
          TEST_DB_PORT: 5432
          TEST_DB_DIALECT: postgres
          TEST_JWT_SECRET: my_test_jwt_secret
          TEST_JWT_EXPIRY: 1h
